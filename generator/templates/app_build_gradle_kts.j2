plugins {
    alias(libs.plugins.androidApplication)
{% if config.configuration.language.value == 'kotlin' %}
    alias(libs.plugins.jetbrainsKotlinAndroid)
{% endif %}
{% if config.configuration.dependencyInjection.value == 'hilt' %}
    alias(libs.plugins.hiltAndroid)
{% endif %}
{% if config.configuration.serialization.value == 'kotlinx-serialization' %}
    alias(libs.plugins.kotlinSerialization)
{% endif %}
{% if config.configuration.enableRoom %}
    alias(libs.plugins.ksp)
{% endif %}
}

android {
    namespace = "{{ config.project.package }}"
    compileSdk = {{ config.project.compileSdk }}

    defaultConfig {
        applicationId = "{{ config.project.package }}"
        minSdk = {{ config.project.minSdk }}
        targetSdk = {{ config.project.targetSdk }}
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
{% if config.configuration.uiToolkit.value == 'jetpack-compose' %}
        vectorDrawables {
            useSupportLibrary = true
        }
{% endif %}
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_{{ config.configuration.javaVersion.value }}
        targetCompatibility = JavaVersion.VERSION_{{ config.configuration.javaVersion.value }}
    }
{% if config.configuration.language.value == 'kotlin' %}
    kotlinOptions {
        jvmTarget = "{{ config.configuration.javaVersion.value }}"
    }
{% endif %}
{% if config.configuration.uiToolkit.value == 'jetpack-compose' %}
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.4"
    }
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
{% endif %}
{% if config.configuration.viewBinding %}
    buildFeatures {
        viewBinding = true
    }
{% endif %}
}

dependencies {
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    
{% if config.configuration.uiToolkit.value == 'jetpack-compose' %}
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
{% if config.configuration.uiTheme.value == 'material3' %}
    implementation(libs.androidx.material3)
{% else %}
    implementation(libs.androidx.compose.material)
{% endif %}
{% else %}
    implementation(libs.androidx.appcompat)
    implementation(libs.material)
    implementation(libs.androidx.constraintlayout)
{% endif %}

{% if config.configuration.networking.value == 'retrofit' %}
    implementation(libs.retrofit)
    implementation(libs.okhttp.logging)
{% if config.configuration.serialization.value == 'gson' %}
    implementation(libs.retrofit.converter.gson)
    implementation(libs.gson)
{% elif config.configuration.serialization.value == 'moshi' %}
    implementation(libs.retrofit.converter.moshi)
    implementation(libs.moshi.kotlin)
{% endif %}
{% elif config.configuration.networking.value == 'ktor' %}
    implementation(libs.ktor.client.android)
    implementation(libs.ktor.client.core)
    implementation(libs.ktor.client.logging)
{% if config.configuration.serialization.value == 'kotlinx-serialization' %}
    implementation(libs.ktor.serialization.kotlinx.json)
    implementation(libs.ktor.client.content.negotiation)
{% endif %}
{% endif %}

{% if config.configuration.serialization.value == 'kotlinx-serialization' %}
    implementation(libs.kotlinx.serialization.json)
{% endif %}

{% if config.configuration.dependencyInjection.value == 'hilt' %}
    implementation(libs.hilt.android)
    ksp(libs.hilt.compiler)
{% elif config.configuration.dependencyInjection.value == 'koin' %}
    implementation(libs.koin.android)
{% if config.configuration.uiToolkit.value == 'jetpack-compose' %}
    implementation(libs.koin.androidx.compose)
{% endif %}
{% endif %}

{% if config.configuration.localStorage.value == 'datastore' %}
    implementation(libs.androidx.datastore.preferences)
{% endif %}

{% if config.configuration.enableRoom %}
    implementation(libs.androidx.room.runtime)
    implementation(libs.androidx.room.ktx)
    ksp(libs.androidx.room.compiler)
{% endif %}

{% if config.configuration.navigation.value == 'compose-navigation' %}
    implementation(libs.androidx.navigation.compose)
{% elif config.configuration.navigation.value == 'jetpack-navigation' %}
    implementation(libs.androidx.navigation.fragment.ktx)
    implementation(libs.androidx.navigation.ui.ktx)
{% endif %}

    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
{% if config.configuration.uiToolkit.value == 'jetpack-compose' %}
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.ui.test.junit4)
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.test.manifest)
{% endif %}
}